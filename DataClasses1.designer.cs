#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Lab6_DB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGENRE(GENRE instance);
    partial void UpdateGENRE(GENRE instance);
    partial void DeleteGENRE(GENRE instance);
    partial void InsertMAKER(MAKER instance);
    partial void UpdateMAKER(MAKER instance);
    partial void DeleteMAKER(MAKER instance);
    partial void InsertMOVIEMAKER(MOVIEMAKER instance);
    partial void UpdateMOVIEMAKER(MOVIEMAKER instance);
    partial void DeleteMOVIEMAKER(MOVIEMAKER instance);
    partial void InsertMOVy(MOVy instance);
    partial void UpdateMOVy(MOVy instance);
    partial void DeleteMOVy(MOVy instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsApplication2.Properties.Settings.Default.Lab6_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GENRE> GENREs
		{
			get
			{
				return this.GetTable<GENRE>();
			}
		}
		
		public System.Data.Linq.Table<MAKER> MAKERs
		{
			get
			{
				return this.GetTable<MAKER>();
			}
		}
		
		public System.Data.Linq.Table<MOVIEMAKER> MOVIEMAKERs
		{
			get
			{
				return this.GetTable<MOVIEMAKER>();
			}
		}
		
		public System.Data.Linq.Table<MOVy> MOVies
		{
			get
			{
				return this.GetTable<MOVy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GENRES")]
	public partial class GENRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MOVIEGENRE_ID;
		
		private int _MOVIE_ID;
		
		private string _GENRE1;
		
		private EntityRef<MOVy> _MOVy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMOVIEGENRE_IDChanging(int value);
    partial void OnMOVIEGENRE_IDChanged();
    partial void OnMOVIE_IDChanging(int value);
    partial void OnMOVIE_IDChanged();
    partial void OnGENRE1Changing(string value);
    partial void OnGENRE1Changed();
    #endregion
		
		public GENRE()
		{
			this._MOVy = default(EntityRef<MOVy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVIEGENRE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MOVIEGENRE_ID
		{
			get
			{
				return this._MOVIEGENRE_ID;
			}
			set
			{
				if ((this._MOVIEGENRE_ID != value))
				{
					this.OnMOVIEGENRE_IDChanging(value);
					this.SendPropertyChanging();
					this._MOVIEGENRE_ID = value;
					this.SendPropertyChanged("MOVIEGENRE_ID");
					this.OnMOVIEGENRE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVIE_ID", DbType="Int NOT NULL")]
		public int MOVIE_ID
		{
			get
			{
				return this._MOVIE_ID;
			}
			set
			{
				if ((this._MOVIE_ID != value))
				{
					if (this._MOVy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMOVIE_IDChanging(value);
					this.SendPropertyChanging();
					this._MOVIE_ID = value;
					this.SendPropertyChanged("MOVIE_ID");
					this.OnMOVIE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GENRE", Storage="_GENRE1", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string GENRE1
		{
			get
			{
				return this._GENRE1;
			}
			set
			{
				if ((this._GENRE1 != value))
				{
					this.OnGENRE1Changing(value);
					this.SendPropertyChanging();
					this._GENRE1 = value;
					this.SendPropertyChanged("GENRE1");
					this.OnGENRE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MOVy_GENRE", Storage="_MOVy", ThisKey="MOVIE_ID", OtherKey="MOVIE_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MOVy MOVy
		{
			get
			{
				return this._MOVy.Entity;
			}
			set
			{
				MOVy previousValue = this._MOVy.Entity;
				if (((previousValue != value) 
							|| (this._MOVy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MOVy.Entity = null;
						previousValue.GENREs.Remove(this);
					}
					this._MOVy.Entity = value;
					if ((value != null))
					{
						value.GENREs.Add(this);
						this._MOVIE_ID = value.MOVIE_ID;
					}
					else
					{
						this._MOVIE_ID = default(int);
					}
					this.SendPropertyChanged("MOVy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAKERS")]
	public partial class MAKER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKER_ID;
		
		private string _MAKER_NAME;
		
		private string _GENDER;
		
		private string _NATIONALITY;
		
		private int _BIRTH_YEAR;
		
		private EntitySet<MOVIEMAKER> _MOVIEMAKERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKER_IDChanging(int value);
    partial void OnMAKER_IDChanged();
    partial void OnMAKER_NAMEChanging(string value);
    partial void OnMAKER_NAMEChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnNATIONALITYChanging(string value);
    partial void OnNATIONALITYChanged();
    partial void OnBIRTH_YEARChanging(int value);
    partial void OnBIRTH_YEARChanged();
    #endregion
		
		public MAKER()
		{
			this._MOVIEMAKERs = new EntitySet<MOVIEMAKER>(new Action<MOVIEMAKER>(this.attach_MOVIEMAKERs), new Action<MOVIEMAKER>(this.detach_MOVIEMAKERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKER_ID
		{
			get
			{
				return this._MAKER_ID;
			}
			set
			{
				if ((this._MAKER_ID != value))
				{
					this.OnMAKER_IDChanging(value);
					this.SendPropertyChanging();
					this._MAKER_ID = value;
					this.SendPropertyChanged("MAKER_ID");
					this.OnMAKER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKER_NAME", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string MAKER_NAME
		{
			get
			{
				return this._MAKER_NAME;
			}
			set
			{
				if ((this._MAKER_NAME != value))
				{
					this.OnMAKER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._MAKER_NAME = value;
					this.SendPropertyChanged("MAKER_NAME");
					this.OnMAKER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NATIONALITY", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string NATIONALITY
		{
			get
			{
				return this._NATIONALITY;
			}
			set
			{
				if ((this._NATIONALITY != value))
				{
					this.OnNATIONALITYChanging(value);
					this.SendPropertyChanging();
					this._NATIONALITY = value;
					this.SendPropertyChanged("NATIONALITY");
					this.OnNATIONALITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIRTH_YEAR", DbType="Int NOT NULL")]
		public int BIRTH_YEAR
		{
			get
			{
				return this._BIRTH_YEAR;
			}
			set
			{
				if ((this._BIRTH_YEAR != value))
				{
					this.OnBIRTH_YEARChanging(value);
					this.SendPropertyChanging();
					this._BIRTH_YEAR = value;
					this.SendPropertyChanged("BIRTH_YEAR");
					this.OnBIRTH_YEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAKER_MOVIEMAKER", Storage="_MOVIEMAKERs", ThisKey="MAKER_ID", OtherKey="MAKER_ID")]
		public EntitySet<MOVIEMAKER> MOVIEMAKERs
		{
			get
			{
				return this._MOVIEMAKERs;
			}
			set
			{
				this._MOVIEMAKERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MOVIEMAKERs(MOVIEMAKER entity)
		{
			this.SendPropertyChanging();
			entity.MAKER = this;
		}
		
		private void detach_MOVIEMAKERs(MOVIEMAKER entity)
		{
			this.SendPropertyChanging();
			entity.MAKER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOVIEMAKERS")]
	public partial class MOVIEMAKER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MOVIEMAKER_ID;
		
		private int _MOVIE_ID;
		
		private int _MAKER_ID;
		
		private string _MOVIE_ROLE;
		
		private EntityRef<MAKER> _MAKER;
		
		private EntityRef<MOVy> _MOVy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMOVIEMAKER_IDChanging(int value);
    partial void OnMOVIEMAKER_IDChanged();
    partial void OnMOVIE_IDChanging(int value);
    partial void OnMOVIE_IDChanged();
    partial void OnMAKER_IDChanging(int value);
    partial void OnMAKER_IDChanged();
    partial void OnMOVIE_ROLEChanging(string value);
    partial void OnMOVIE_ROLEChanged();
    #endregion
		
		public MOVIEMAKER()
		{
			this._MAKER = default(EntityRef<MAKER>);
			this._MOVy = default(EntityRef<MOVy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVIEMAKER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MOVIEMAKER_ID
		{
			get
			{
				return this._MOVIEMAKER_ID;
			}
			set
			{
				if ((this._MOVIEMAKER_ID != value))
				{
					this.OnMOVIEMAKER_IDChanging(value);
					this.SendPropertyChanging();
					this._MOVIEMAKER_ID = value;
					this.SendPropertyChanged("MOVIEMAKER_ID");
					this.OnMOVIEMAKER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVIE_ID", DbType="Int NOT NULL")]
		public int MOVIE_ID
		{
			get
			{
				return this._MOVIE_ID;
			}
			set
			{
				if ((this._MOVIE_ID != value))
				{
					if (this._MOVy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMOVIE_IDChanging(value);
					this.SendPropertyChanging();
					this._MOVIE_ID = value;
					this.SendPropertyChanged("MOVIE_ID");
					this.OnMOVIE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKER_ID", DbType="Int NOT NULL")]
		public int MAKER_ID
		{
			get
			{
				return this._MAKER_ID;
			}
			set
			{
				if ((this._MAKER_ID != value))
				{
					if (this._MAKER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKER_IDChanging(value);
					this.SendPropertyChanging();
					this._MAKER_ID = value;
					this.SendPropertyChanged("MAKER_ID");
					this.OnMAKER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVIE_ROLE", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string MOVIE_ROLE
		{
			get
			{
				return this._MOVIE_ROLE;
			}
			set
			{
				if ((this._MOVIE_ROLE != value))
				{
					this.OnMOVIE_ROLEChanging(value);
					this.SendPropertyChanging();
					this._MOVIE_ROLE = value;
					this.SendPropertyChanged("MOVIE_ROLE");
					this.OnMOVIE_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAKER_MOVIEMAKER", Storage="_MAKER", ThisKey="MAKER_ID", OtherKey="MAKER_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MAKER MAKER
		{
			get
			{
				return this._MAKER.Entity;
			}
			set
			{
				MAKER previousValue = this._MAKER.Entity;
				if (((previousValue != value) 
							|| (this._MAKER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAKER.Entity = null;
						previousValue.MOVIEMAKERs.Remove(this);
					}
					this._MAKER.Entity = value;
					if ((value != null))
					{
						value.MOVIEMAKERs.Add(this);
						this._MAKER_ID = value.MAKER_ID;
					}
					else
					{
						this._MAKER_ID = default(int);
					}
					this.SendPropertyChanged("MAKER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MOVy_MOVIEMAKER", Storage="_MOVy", ThisKey="MOVIE_ID", OtherKey="MOVIE_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MOVy MOVy
		{
			get
			{
				return this._MOVy.Entity;
			}
			set
			{
				MOVy previousValue = this._MOVy.Entity;
				if (((previousValue != value) 
							|| (this._MOVy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MOVy.Entity = null;
						previousValue.MOVIEMAKERs.Remove(this);
					}
					this._MOVy.Entity = value;
					if ((value != null))
					{
						value.MOVIEMAKERs.Add(this);
						this._MOVIE_ID = value.MOVIE_ID;
					}
					else
					{
						this._MOVIE_ID = default(int);
					}
					this.SendPropertyChanged("MOVy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOVIES")]
	public partial class MOVy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MOVIE_ID;
		
		private string _TITLE;
		
		private int _RELEASE_YEAR;
		
		private string _SPOKEN_LANGUAGE;
		
		private System.Nullable<int> _RATING;
		
		private EntitySet<GENRE> _GENREs;
		
		private EntitySet<MOVIEMAKER> _MOVIEMAKERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMOVIE_IDChanging(int value);
    partial void OnMOVIE_IDChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnRELEASE_YEARChanging(int value);
    partial void OnRELEASE_YEARChanged();
    partial void OnSPOKEN_LANGUAGEChanging(string value);
    partial void OnSPOKEN_LANGUAGEChanged();
    partial void OnRATINGChanging(System.Nullable<int> value);
    partial void OnRATINGChanged();
    #endregion
		
		public MOVy()
		{
			this._GENREs = new EntitySet<GENRE>(new Action<GENRE>(this.attach_GENREs), new Action<GENRE>(this.detach_GENREs));
			this._MOVIEMAKERs = new EntitySet<MOVIEMAKER>(new Action<MOVIEMAKER>(this.attach_MOVIEMAKERs), new Action<MOVIEMAKER>(this.detach_MOVIEMAKERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVIE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MOVIE_ID
		{
			get
			{
				return this._MOVIE_ID;
			}
			set
			{
				if ((this._MOVIE_ID != value))
				{
					this.OnMOVIE_IDChanging(value);
					this.SendPropertyChanging();
					this._MOVIE_ID = value;
					this.SendPropertyChanged("MOVIE_ID");
					this.OnMOVIE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RELEASE_YEAR", DbType="Int NOT NULL")]
		public int RELEASE_YEAR
		{
			get
			{
				return this._RELEASE_YEAR;
			}
			set
			{
				if ((this._RELEASE_YEAR != value))
				{
					this.OnRELEASE_YEARChanging(value);
					this.SendPropertyChanging();
					this._RELEASE_YEAR = value;
					this.SendPropertyChanged("RELEASE_YEAR");
					this.OnRELEASE_YEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPOKEN_LANGUAGE", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string SPOKEN_LANGUAGE
		{
			get
			{
				return this._SPOKEN_LANGUAGE;
			}
			set
			{
				if ((this._SPOKEN_LANGUAGE != value))
				{
					this.OnSPOKEN_LANGUAGEChanging(value);
					this.SendPropertyChanging();
					this._SPOKEN_LANGUAGE = value;
					this.SendPropertyChanged("SPOKEN_LANGUAGE");
					this.OnSPOKEN_LANGUAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATING", DbType="Int")]
		public System.Nullable<int> RATING
		{
			get
			{
				return this._RATING;
			}
			set
			{
				if ((this._RATING != value))
				{
					this.OnRATINGChanging(value);
					this.SendPropertyChanging();
					this._RATING = value;
					this.SendPropertyChanged("RATING");
					this.OnRATINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MOVy_GENRE", Storage="_GENREs", ThisKey="MOVIE_ID", OtherKey="MOVIE_ID")]
		public EntitySet<GENRE> GENREs
		{
			get
			{
				return this._GENREs;
			}
			set
			{
				this._GENREs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MOVy_MOVIEMAKER", Storage="_MOVIEMAKERs", ThisKey="MOVIE_ID", OtherKey="MOVIE_ID")]
		public EntitySet<MOVIEMAKER> MOVIEMAKERs
		{
			get
			{
				return this._MOVIEMAKERs;
			}
			set
			{
				this._MOVIEMAKERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GENREs(GENRE entity)
		{
			this.SendPropertyChanging();
			entity.MOVy = this;
		}
		
		private void detach_GENREs(GENRE entity)
		{
			this.SendPropertyChanging();
			entity.MOVy = null;
		}
		
		private void attach_MOVIEMAKERs(MOVIEMAKER entity)
		{
			this.SendPropertyChanging();
			entity.MOVy = this;
		}
		
		private void detach_MOVIEMAKERs(MOVIEMAKER entity)
		{
			this.SendPropertyChanging();
			entity.MOVy = null;
		}
	}
}
#pragma warning restore 1591
